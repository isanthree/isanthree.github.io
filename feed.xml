<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://isanthree.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://isanthree.github.io/" rel="alternate" type="text/html" /><updated>2021-05-21T09:54:56+08:00</updated><id>https://isanthree.github.io/feed.xml</id><title type="html">focus_on_one_thing</title><subtitle>自建个人博客</subtitle><author><name>stepbystep</name></author><entry><title type="html">闲来说说</title><link href="https://isanthree.github.io/2021/05/20/small-daily/" rel="alternate" type="text/html" title="闲来说说" /><published>2021-05-20T00:00:00+08:00</published><updated>2021-05-20T00:00:00+08:00</updated><id>https://isanthree.github.io/2021/05/20/small-daily</id><content type="html" xml:base="https://isanthree.github.io/2021/05/20/small-daily/">&lt;p&gt;Content here&lt;/p&gt;

&lt;p&gt;摇旗呐喊的热情 携光阴渐远去&lt;/p&gt;

&lt;p&gt;人世间悲喜烂剧 昼夜轮播不停&lt;/p&gt;

&lt;p&gt;纷飞的滥情男女 情仇爱恨别离&lt;/p&gt;

&lt;p&gt;一代人终将老去 但总有人正年轻&lt;/p&gt;

&lt;p&gt;——刺猬 《火车驶向云外，梦安魂于九霄》&lt;/p&gt;</content><author><name>stepbystep</name></author><category term="碎碎念" /><summary type="html">Content here</summary></entry><entry><title type="html">档案相关</title><link href="https://isanthree.github.io/2021/05/19/about-archives/" rel="alternate" type="text/html" title="档案相关" /><published>2021-05-19T00:00:00+08:00</published><updated>2021-05-19T00:00:00+08:00</updated><id>https://isanthree.github.io/2021/05/19/about-archives</id><content type="html" xml:base="https://isanthree.github.io/2021/05/19/about-archives/">&lt;p&gt;快毕业了，最近被档案这事搞得有点烦，班群里面发了一个word，关于档案，为了防止不小心删了，也为了更好找到，就搬到这里来了。&lt;/p&gt;

&lt;p&gt;原文：&lt;/p&gt;

&lt;p&gt;毕业N年后，请不要像我一样被档案烦死(转自一位已经毕业的学姐)&lt;/p&gt;

&lt;h2 id=&quot;一-提醒大学生深刻重视档案避免以后麻烦&quot;&gt;一. 提醒大学生：深刻重视档案，避免以后麻烦！&lt;/h2&gt;

&lt;p&gt;大学毕业最痛苦的是搞不定档案和户口。户口，一般不会丢，大家都很当回事，毕竟身份证一丢，马上就要处理户口。但就是这个档案，却是很多人不当回事。但是只要你是活在中国的毕业大学生，你肯定就会碰到档案的事情。作为一个毕业了5年左右的毕业生，回头去看档案，毫无疑问，是相当重要的，如果有机会重来，我自己一定会这“档”子事搞好。如果你毕业N年后不想像我现在烦躁不已，那么请静下心来认真看下这篇文章!在毕业时花些时间，把档案这件事情处理好，会减少许多以后不必要的麻烦。请各位深刻重视。&lt;/p&gt;

&lt;h2 id=&quot;二-说说我因为档案造成的烦心事&quot;&gt;二. 说说我因为档案造成的烦心事！&lt;/h2&gt;

&lt;p&gt;为了方便大家了解大学生档案的重要性，说下我的经历。我大学毕业的时候，是在厦门的一家国有企业工作，所以毕业时候的户口. 档案都调到国有企业去了（国有企业和我们签订了3年的就业合同，如果我们提前离职，就要赔违约金，否则就扣押住档案）。在国有企业工作快三年时间，对国有企业很是失望，国企管理松懈，整天清闲，觉得无聊，工资也不高，20来岁干的确是60岁人就能干的工作，深深为自己的前途担忧。所以总是去思考出路。后来机缘巧合对计算机感兴趣了，毕竟互联网和电子商务的发展有目共睹。偶尔看传智播客韩顺平老师的《php从入门到精通》讲的非常不错，就从国企辞职到了北京传智播客学php。结业后很幸运的就在直接就进入了互联网行业，工资直接是我在国企的三倍，所以我也就留在了北京，叫在厦门的同事帮我处理离职的事情。在这里，就出现了档案问题了，不知怎么回事档案却被同事转寄送到我手里来了。由于在北京工作，北京的人才市场是不接非北京户口档案，而北京的这家公司没档案也依然给我上保险。把档案存在人事代理公司，自己也是非常不放心。所以工作一忙我也就没有去处理档案（存哪里都不合适），就一直放在手上了。&lt;/p&gt;

&lt;p&gt;现在两年过去了，由于档案一直在我手里，档案已经成为“死档”了。我就算办理了结婚证，也无法办理准生证，糟糕透了。打电话咨询我们县人事局档案专员，竟然告诉我这两年没有工龄。更重要的是我想考职称没法考。因为这两年没有工龄，而我要考的职称需要3年工龄。其实我已经工作五年了，社保却无法作证，偏要这个北京人才市场不接受的档案作证。咨询北京人事代理公司“档案激活”业务，询问到费用，对方虽说具体面谈，但是起步价就要8000元，还上不封顶。因为现在不办，以后我也得办，晚办不如早班，早办毕竟工龄能多算！这笔费用，看来是被吃定了，想想都郁闷烦心！&lt;/p&gt;

&lt;p&gt;虽然烦心，但最近这几天的反复查询网站，和老家人事局. 北京人事代理公司. 厦门人才市场反复打电话，总算搞明白档案这档子事！特分享给大学的朋友们！一定要认真看，不要N年后跟我一样麻烦！&lt;/p&gt;

&lt;h2 id=&quot;三-说说档案这档子事&quot;&gt;三. 说说档案这档子事：&lt;/h2&gt;

&lt;p&gt;档案是什么？
档案大部分时间自己是看不到的，都是由相关部门进行托管。档案对于工作的人来说是计算工龄的一个重要凭证。具体可以百度“人事档案”，有相关百科，在此由于篇幅限制，不再过多赘述。&lt;/p&gt;

&lt;p&gt;档案的作用：
下面具体讲讲几个我们没有档案，办理会非常麻烦的几个事情：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;转正定级，获取干部身份。必须在第一家单位就业工作满一年，申请转正定级，才会获得干部身份了。干部身份有什么用，百度百科“干部身份”。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;考研；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;考公务员，没有人事档案，没有办法过政审这关。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;评职称，如果没有档案，你就没有干部身份，也就没有资格评职称。而职称往往是和工资和户口积分挂钩的（天津就是这样）。有职称，也是求职的一个砝码！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;考资格证，比如会计专业资格考试等，考试需要和人事档案的地点相同，没有人事档案，你报名都可能报不上。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;办理准生证，都需要男方存档案的地方开婚育证明，档案都不知道在哪里，你怎么开！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;出国审查，没有档案，政审就无法进行&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;养老保险。工龄计算，必须要档案！退休后要拿到退休金，必须要档案，档案是否完备，也将影响到退休金的高低。（根据2010年出台的相关文件，自2011年1月1日起，无档案人员也可以以养老保险实际缴纳年限来办理退休手续，但办理过程非常麻烦。）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;某些大城市，比如上海，办理居住证，前提是将档案调到上海。没有档案，就没有办法办理居住证，也就没有办法落户上海了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进国企，事业单位需要档案，而且这是一个非常重要的材料。如果你没有档案且不及时补救，那么这种好单位的大门也会向你关上。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;住房补贴发放&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;入团入党。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;档案重要吗？如果你这辈子跟上面12件事无关，你确实无需操心档案，如果不幸的是12件事情中哪怕只有1件，你档案如果丢失了也将会很麻烦。所以千万不要当“弃档族”！&lt;/p&gt;

&lt;h2 id=&quot;四-档案如此重要为什么有些人却成了弃档族&quot;&gt;四. 档案如此重要，为什么有些人却成了弃档族？&lt;/h2&gt;

&lt;p&gt;档案很重要，人事档案没处理好将给自己带来很多麻烦。但对档案“置之不理”的大学毕业生却不在少数。但却有调查显示，有近四成高学历求职者都加入了“弃档族”，很多毕业生根本不知道自己的档案放在哪里！&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;首先是就业指导老师阐述的不太清楚，就是你当面去问他都有可能问不清楚。毕竟对于一些不负责任的就业老师而言，只要将学员的档案从学校转出去，工作就算是做到位了，很难将档案和毕业生未来生活关系阐述清楚。照本宣科的讲规章制度，或只是去强调“这是国家规定的”，导致大学生们茫然，就算知道重要但却不知道如何具体去处理，不知不觉中就成了弃档族。&lt;/li&gt;
  &lt;li&gt;网上对于档案的重要性，众说纷纭。有的说重要，也有很多人说不重要。就算是有帖子阐述了档案的重要性，但却对于如何处理档案却也没有说的详细清楚。学员们无法根据自己的实际情况采取相应的办法，不知不觉中就成了弃档族。&lt;/li&gt;
  &lt;li&gt;其次是目前的很多企业不具备存放档案是资格，再加上现在的绝大部分企业没有档案一样可以上社保，一样可以上班，一样可以领工资。所以我们就理所当然的就认为档案不重要。&lt;/li&gt;
  &lt;li&gt;如果是在私企，我们身边的很多人都搞不清楚档案的事情，甚至是人事也不清楚档案作用。不仅不清楚，而且时常会给你灌输档案没有什么作用，让你真就以为档案没有什么作用了。&lt;/li&gt;
  &lt;li&gt;某些地方人才市场（比如北京）对于非户籍人员咨询，态度冷漠，只告诉能不能入而不会告诉你应该怎么办！一不小心，自己就成为弃档族了。&lt;/li&gt;
  &lt;li&gt;很多人因为档案丢失而造成的麻烦也不会去说（其实网上百度就知道，太多人由于档案丢失造成麻烦），去给他人预警和提示。所以大家一个个就掉进坑里去了。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;五-档案该怎么操作才能不当弃档族非常重要认真看&quot;&gt;五. 档案该怎么操作才能不当“弃档族”？非常重要，认真看!&lt;/h2&gt;

&lt;p&gt;强调档案的两个重要的注意事项:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;毕业后档案不能放在自己手里。可以存放学校. 生源地人事局. 人才市场. 劳动局，街道办事处，职介，否则就是死档！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;毕业后自己的第一份工作，如果档案转到单位或当地人才中心，一定要记得干满一年，然后向单位或人才申请转正定级，获得干部身份（干部身份的好处，可以百度）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面就结合我们毕业生的各种情况，详细谈谈我们应如何处理我们的户口档案：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;毕业后档案存放学校（注意2年期限）：
 如果毕业后没有及时找到合适工作（或考研），导致毕业即失业，可以到学校申请暂缓就业，在两年内找到工作的，一定要及时回校办理档案转移，到学校将户籍和档案迁至工作单位所在地或单位所在地的人才市场。两年过后，学校就会打回原籍，很可能造成档案丢失。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;毕业后档案存放人才市场（建议）：&lt;/p&gt;

    &lt;p&gt;1) 毕业没有找到单位的（或考研），可以去学校或单位所在的人才市场进行档案挂靠，千万不能弃档。人才市场都是人事局办的，是官方机构，这是政府部门，拥有档案保管权，有权办理转正定级，放在那里起码有安全保障。但要提醒的是， 一旦找到工作要及时办理就业手续，以便能够及时的进行转正定级，方便后面的正式调动。如果没有找到工作，也要记得人才交流中心的集体户口是属于临时户口，有两年的限期，毕业超过两年就不能继续托管了，会变成“死档”。一定要记得去处理。可以自己申请打回原籍，以免档案丢失。&lt;/p&gt;

    &lt;p&gt;2) 毕业后找到单位的，可放心的找就业地方人才市场挂靠，而且挂靠的人才市场可能会接收个人手上的档案。从存放在人才市场之日开始，就可以算我们的工龄了。就算以后到别的地方发展，也可以通过发调档函，很方便的转到新就业地人才市场。这样既不影响在当地工作，也不影响职称’晋级’，工龄还能连续计算，顺畅地完成衔接。这里有个注意点是找到的第一份单位工作如果未做满一年，无法请求人才市场进行转正定级，将会失去干部身份。所以如果我们一定要离职，也一定要等到我们的第一份工作做满一年已经申请转正定级获得干部身份后。&lt;/p&gt;

    &lt;p&gt;3) 毕业后找到单位后又辞职到其他地方去的，这里还有个注意点：某些地方的人才市场5年内如果没有交档案保管费，人才市场保管档案的义务就会自动解除，档案会被封存，我们的档案会成为“死档”（35岁之前可以档案激活，35岁之后，就麻烦了）！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;毕业后档案主动打回原籍（建议）&lt;/strong&gt;：
 不管是否参加工作，都可将自己的档案拿回到原籍人事局或人才市场，省的以后麻烦，毕竟以后如果有事情可以让父母帮着处理。把档案放在家乡的人才市场，以后在外地找到工作后不会麻烦，一方面工作又不需要档案，就算是是找到国企. 考到公务员，单位发函到你家乡人才市场调档案就可以了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;毕业后档案寄送公司/单位（不太建议）&lt;/strong&gt;：
 现在一般公司都是把员工档案统一放在公司所在区的人才市场的。建议档案还是不要归公司管理，以防自己离职的时候档案很有可能被公司扣留。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;档案存放在街道办事处（尽量不要）&lt;/strong&gt;：
 档案在街道的话，一旦有单位录用你需要调取档案的话比较的麻烦。而且档案放在街道一样要交存档费用。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;六-很多人档案会成为死档的三种原因&quot;&gt;六. 很多人档案会成为“死档”的三种原因&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;档案丢失会成为“死档”。
    毕业生择业期为两年，因此择业期间可申请学校代管两年。放在学校两年期满后仍未落实工作的（或找到工作未及时来学校处理的），学校就会将档案和户口一起打回原籍了（或转到学生户口所在地的人才交流中心，或转至生源地所在地级市的人事局或教育局接收）。这里需要强调的是，在打回的过程中很容易把档案搞丢。所以要么两年内去落实工作，要么自己去办理户口和档案转移到某个人才市场或转移到家里去。很多人成为弃档族，就是这里搞丢了！&lt;/li&gt;
  &lt;li&gt;档案长期在自己手里超过2年，也会成为“死档”，本人就属于这种。&lt;/li&gt;
  &lt;li&gt;五年内没有交档案保管费而被人才市场等机构封存的，也会被认为是“死档”。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;七-档案如果不小心成了死档了怎么办不用着急请看办法&quot;&gt;七. 档案如果不小心成了死档了怎么办？不用着急，请看办法！&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;毕业生择业期为两年，如档案遗失，造成没有按规定办理存档手续而成为“死档”，毕业后未超过2年择业期的（有的地方是3年择业期），可直接去人才市场补办存档手续。超过了择业期，则可以按照非普通高等院校毕业生身份，携带身份证. 学历证. 户口簿等材料重新办理存档！但前提是不要超过35岁！&lt;/li&gt;
  &lt;li&gt;把档案留在人才服务机构超过5年没有理会的，只需要补齐代管费. 办妥相关手续，就可将档案关系理顺。&lt;/li&gt;
  &lt;li&gt;自己携带档案要尽快向人才服务机构咨询，如果档案袋被打开，里面的资料需要经过相关部门核实，如果档案资料遗失，还要到原单位去补充和确认&lt;/li&gt;
  &lt;li&gt;“跳槽”人员将档案遗留在原单位长期未办理转档手续的，要与原单位协商，解决跳槽后的遗留问题，以便及时将档案转交。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最后：郑重提醒：&lt;/p&gt;

&lt;p&gt;师弟师妹们，在这个除了父母兄弟朋友谁也不会管你事情的社会，如果你觉得这篇文章有用，请记得转发给你的朋友或同学。让他们也能和你一样，N年后也省去档案的烦恼。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/pic/image-20210519110517468.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>stepbystep</name></author><category term="生活" /><summary type="html">快毕业了，最近被档案这事搞得有点烦，班群里面发了一个word，关于档案，为了防止不小心删了，也为了更好找到，就搬到这里来了。</summary></entry><entry><title type="html">【vscode】intellisense 模式 msvc-x64 与编译器路径不兼容</title><link href="https://isanthree.github.io/2021/05/16/solve-vscode-problem/" rel="alternate" type="text/html" title="【vscode】intellisense 模式 msvc-x64 与编译器路径不兼容" /><published>2021-05-16T00:00:00+08:00</published><updated>2021-05-16T00:00:00+08:00</updated><id>https://isanthree.github.io/2021/05/16/solve-vscode-problem</id><content type="html" xml:base="https://isanthree.github.io/2021/05/16/solve-vscode-problem/">&lt;p&gt;看一下问题：intellisense 模式 msvc-x64 与编译器路径不兼容。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210516000401.png&quot; alt=&quot;image-20210516000345240&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下来看一下解决办法：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210516000500.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们只需要将此处的 msvc 改为 gcc 即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210516000641.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>stepbystep</name></author><category term="环境配置" /><category term="vscode" /><summary type="html">看一下问题：intellisense 模式 msvc-x64 与编译器路径不兼容。</summary></entry><entry><title type="html">我所理解的生活</title><link href="https://isanthree.github.io/2021/05/15/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB/" rel="alternate" type="text/html" title="我所理解的生活" /><published>2021-05-15T00:00:00+08:00</published><updated>2021-05-15T00:00:00+08:00</updated><id>https://isanthree.github.io/2021/05/15/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB</id><content type="html" xml:base="https://isanthree.github.io/2021/05/15/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB/">&lt;p&gt;每一次「嘴笨」的背后，都有平时疏于思考的懒惰。——写在最前面。&lt;/p&gt;

&lt;h3 id=&quot;现状&quot;&gt;现状&lt;/h3&gt;

&lt;p&gt;大学准备毕业，迫不及待地想拥有一切。我们一直在匆忙前行，其实最急迫的可能不是快点往前走，而是偶尔停下来想一想为何这样，调整好前进的方向。&lt;/p&gt;

&lt;h3 id=&quot;关于忙&quot;&gt;关于忙&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;所有生活的美学旨在抵抗一个字——忙。忙就是心灵死亡，不要再忙了——你就开始有生活的美学。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其实细想，忙倒也不可怕，年轻人总得要先折腾一番。可怕的是不知所谓的忙，这通常是没有明确的目的，却把自己置于一刻不得闲的境地，绵绵无绝期，但又仿佛一停下来，就会落于人后，就会在那消停的一段时间里，丢失了生活的意义。&lt;/p&gt;

&lt;h3 id=&quot;关于爱情&quot;&gt;关于爱情&lt;/h3&gt;

&lt;p&gt;在面对「为什么要见面？拒绝‘爱你’‘想你’这样的矫情答案。」这样一个棘手的问题的时候，脑子里似乎有无数个答案试图冲出来但却被贴上矫情标签一一打回。&lt;/p&gt;

&lt;p&gt;爱情也许是这世上最难具象化的东西了吧，不知道近期推出的各种有诚意的聊天工具能不能帮助到被此困扰的思考者们（此处当然是玩笑）。&lt;/p&gt;

&lt;p&gt;试着从网友的智慧里找到一个答案：因为成熟的爱情里的两个人会懂得相处的时候彼此相容，相离的时候彼此相思，相守的时候彼此相依。至于爱情是什么，爱情就是两个人互相的征服，彼此一定要有最与众不同的一点让对方喜欢，比你还要清楚你身上的每一个缺点，当然，更爱你的优点，不会不顾一切对你好，但是你会是我在生命里付出最多的人。&lt;/p&gt;

&lt;p&gt;哈哈哈哈好矫情的回答笑 Crying。&lt;/p&gt;

&lt;p&gt;一个人的时候其实是很无畏很能凑合的，但是爱是会让人懂得害怕的，害怕失去，害怕自己不够好，太多害怕……&lt;/p&gt;

&lt;p&gt;两个人免不了要彼此包容，想要在所有事情上都观点相同是不现实的；两个人应该也要能彼此成就，能有一些促进对方做更好的自己的特质。&lt;/p&gt;

&lt;p&gt;当然最重要的，我们首先还是自己的自己，然后才会是彼此的彼此，每个人都应该活出一个丰满充实的人生，不应把自己的愉悦与幸福过度地寄托在别人身上，幸福是自己感觉出来的。&lt;/p&gt;

&lt;p&gt;任何事情说得太多了就廉价了，比如说爱，比如表白，或许现状才是最好的，或许很多都是错误，以致很长的一段时间，让人不敢去想、去回忆、去面对……&lt;/p&gt;

&lt;h3 id=&quot;关于承诺&quot;&gt;关于承诺&lt;/h3&gt;

&lt;p&gt;一直以来都认为爱情里的承诺是一种很苍白的语言。双方足够信任的时候，不需要承诺，因为会笃定地相信两个人会为了共同的目标去努力。在不得不需要承诺来令对方相信的时候，相信两个人心里都会有一丝悲情和哀伤。&lt;/p&gt;

&lt;p&gt;如果必须要承诺，我承诺我会持续不断地努力让自己和爱的人生活得更好。&lt;/p&gt;

&lt;h3 id=&quot;关于欲望&quot;&gt;关于欲望&lt;/h3&gt;

&lt;p&gt;欲望是无止境的，很多东西，够用舒适就行，在这样的前提下，容易满足的人更容易得到更多的幸福感吧。&lt;/p&gt;

&lt;h3 id=&quot;the-end&quot;&gt;The end&lt;/h3&gt;

&lt;p&gt;最后，以例行的励志高昂充满希望句式结束这一通感慨（网摘）：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;酸甜苦辣咸涩&lt;br /&gt;
都可以&lt;br /&gt;
唯独那无味的&lt;br /&gt;
才最叫人感到失落&lt;br /&gt;
赤橙黄绿青蓝紫&lt;br /&gt;
都行&lt;br /&gt;
唯独那无色的&lt;br /&gt;
才最叫人感到暗淡&lt;br /&gt;
喜怒哀乐哭笑&lt;br /&gt;
都是歌&lt;br /&gt;
唯独那无表情的&lt;br /&gt;
才最叫人悲哀&lt;br /&gt;
生活不能淡而无味&lt;br /&gt;
生命不能黯然无光&lt;br /&gt;
人生应当有所作为&lt;br /&gt;
红红火火&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>stepbystep</name></author><category term="生活" /><category term="随笔" /><summary type="html">每一次「嘴笨」的背后，都有平时疏于思考的懒惰。——写在最前面。</summary></entry><entry><title type="html">welcome to my blog</title><link href="https://isanthree.github.io/2021/05/13/welcome-to-my-blog/" rel="alternate" type="text/html" title="welcome to my blog" /><published>2021-05-13T00:00:00+08:00</published><updated>2021-05-13T00:00:00+08:00</updated><id>https://isanthree.github.io/2021/05/13/welcome%20to%20my%20blog</id><content type="html" xml:base="https://isanthree.github.io/2021/05/13/welcome-to-my-blog/">&lt;h1 id=&quot;欢迎大家&quot;&gt;欢迎大家！&lt;/h1&gt;
&lt;h2 id=&quot;欢迎大家-1&quot;&gt;欢迎大家！&lt;/h2&gt;
&lt;h3 id=&quot;欢迎大家-2&quot;&gt;欢迎大家！&lt;/h3&gt;
&lt;h4 id=&quot;欢迎大家-3&quot;&gt;欢迎大家！&lt;/h4&gt;
&lt;h5 id=&quot;欢迎大家-4&quot;&gt;欢迎大家！&lt;/h5&gt;
&lt;h6 id=&quot;欢迎大家-5&quot;&gt;欢迎大家！&lt;/h6&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/typora-assets/master/xiaoshujiang/1620901669020.png&quot; alt=&quot;enter description here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/typora-assets/xiaoshujiang/1620901987308.png&quot; alt=&quot;enter description here&quot; /&gt;&lt;/p&gt;</content><author><name>stepbystep</name></author><category term="welcome" /><summary type="html">欢迎大家！ 欢迎大家！ 欢迎大家！ 欢迎大家！ 欢迎大家！ 欢迎大家！</summary></entry><entry><title type="html">小书匠编辑器</title><link href="https://isanthree.github.io/2021/05/13/xiaoshujiang-editor/" rel="alternate" type="text/html" title="小书匠编辑器" /><published>2021-05-13T00:00:00+08:00</published><updated>2021-05-13T00:00:00+08:00</updated><id>https://isanthree.github.io/2021/05/13/xiaoshujiang-editor</id><content type="html" xml:base="https://isanthree.github.io/2021/05/13/xiaoshujiang-editor/">&lt;p&gt;[toc]&lt;/p&gt;

&lt;h1 id=&quot;概要&quot;&gt;概要&lt;/h1&gt;

&lt;p&gt;小书匠编辑器不仅仅是一款专为 markdown 写作而设计的编辑器，还内置了&lt;a href=&quot;http://soft.xiaoshujiang.com/docs/tutorial/database/&quot;&gt;数据中心&lt;/a&gt;，实现了&lt;a href=&quot;http://soft.xiaoshujiang.com/docs/tutorial/filter/&quot;&gt;过滤器&lt;/a&gt;,&lt;a href=&quot;http://soft.xiaoshujiang.com/docs/tutorial/search_grammar/&quot;&gt;全文搜索&lt;/a&gt;，&lt;a href=&quot;http://soft.xiaoshujiang.com/docs/tutorial/link_network_map/&quot;&gt;链接关系图&lt;/a&gt;,反向链接等方便快速定位历史文章的功能，完全可以做为一款个人 &lt;strong&gt;真&lt;/strong&gt; 离线的笔记系统，知识管理工具。&lt;/p&gt;

&lt;h1 id=&quot;主要功能&quot;&gt;主要功能&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;专为markdown写作设计的文档编辑器&lt;/strong&gt;，让用户心无旁骛的进行创作。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;多种编辑模式&lt;/strong&gt;。单栏编辑，双栏编辑，三栏编辑，全屏写作，全屏阅读…想怎么切换，就怎么切换，就是这样随心所欲。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;多种编辑器实现&lt;/strong&gt;。codemirror编辑器（提供vim,emacs按键，行专注等），ace编辑器（提供vim，emacs按键绑定，显示行号），CJK竖排编辑器, 自定义外部编辑器, 总有一款编辑器按键符合你的要求&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;多种主题选择&lt;/strong&gt;。包括编辑器主题，预览区代码高亮主题，及预览区用户自定义css。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;丰富的语法支持&lt;/strong&gt;。不仅提供了常用的commanmarkdown语法，还提供了许多有用的扩展语法，比如==Latex公式==，==表格==, ==目录==， ==脚注==, ==视频==, ==音频==, ==附件==, ==checklist==, ==流程图==等。更多语法可查看&lt;小书匠语法使用手册&gt;&lt;/小书匠语法使用手册&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;drawio 绘图&lt;/strong&gt;, 想要在 markdown 文章上表达更复杂的图形, drawio 绝对是你的不二选择,配合小书匠, 简直就是 &lt;strong&gt;1+1&amp;gt;2&lt;/strong&gt; 的最有力证明&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;表格组件&lt;/strong&gt;, 单元格合并,表格内嵌套表格,富文本式的表格编辑,弥补了 markdown 对表格支持的不足,再也不会为复杂的表格呈现而烦恼.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;代码块文字格式语法&lt;/strong&gt;。语法可查看&lt;小书匠语法使用手册&gt;&lt;/小书匠语法使用手册&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;第三方同步&lt;/strong&gt;。==浏览器存储==, ==本地文件系统存储==, ==Dropbox==, ==Evernote==, ==印象笔记==,==gitee==, ==为知笔记==, ==Github==, ==Webdav==, ==坚果云==, ==Seafile==, ==Gitlab==, ==ownCloud==, ==NextCloud==, ==有道笔记==等多种存储方案，保证了用户数据的安全，也让用户在存储方案上有了更多的选择。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;支持evernote，印象笔记&lt;/strong&gt;。提供双向操作，可以将文章保存到evernote/印象笔记上，也可以从evernote/印象笔记上导入数据。同时提供标签，附件，图片，待办等相关处理。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;模板管理&lt;/strong&gt;, 通过模板,创建自己经常使用的文章格式&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;强大的文件管理功能&lt;/strong&gt;。文件信息，标签，附件，音频，视频，图片管理。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;过滤器&lt;/strong&gt;. 标签过滤,分类树过滤,日历时间过滤,快速归类自己的文件&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;置顶&lt;/strong&gt;. 将经常编辑的文章进行置顶操作,再不用来回查找那些高频修改的文章&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;数据中心&lt;/strong&gt;, 自定义数据中心数据库,实现自己的云数据库.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;发布功能&lt;/strong&gt;。 支持将文章发布到博客平台上。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;邮件发送功能&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;全文分词搜索&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ppt&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ppt跨屏演示&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;pdf预览&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;typewriter scrolling&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;autocomplete 和 snippets 功能&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;链接关系图&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;反向链接&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;微信公众号分享&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;离线版下载地址&quot;&gt;离线版下载地址&lt;/h1&gt;

&lt;p&gt;http://soft.xiaoshujiang.com&lt;/p&gt;

&lt;h1 id=&quot;web版访问地址&quot;&gt;WEB版访问地址&lt;/h1&gt;

&lt;p&gt;http://markdown.xiaoshujiang.com&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;元数据使用说明&quot;&gt;元数据使用说明&lt;/h1&gt;

&lt;p&gt;语法开关元数据项，可以到设置面板里的语法扩展标签页下查看对应的元数据标识．在元数据里true时，表示当前文档强制打开该语法，false时表示强制关闭该语法．如果没有对应的元数据，则使用全局设置里的语法开关.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preview_previewType&lt;/code&gt;元数据，可用的值为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;normal&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;presentation&lt;/code&gt;．用于文章在打开时，控制是否需要系统切换对应的预览界面．如果文章里没有该项元数据，或者元数据值不正确，则系统默认使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;normal&lt;/code&gt;预览界面．该元数据仅控制文章打开时初始化的界面，用户依然可以通过按钮在不同预览界面间切换．&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;浏览器存储&quot;&gt;浏览器存储&lt;/h1&gt;
&lt;p&gt;系统对创建的文章，都会在浏览器存储上进行保存。包括像evernote/印象笔记/github/dropbox等导入的文章，也都会保存一份副本，并创建一个标识，表示跟哪些第三方存储关联。&lt;/p&gt;

&lt;h2 id=&quot;标题标签&quot;&gt;标题，标签&lt;/h2&gt;
&lt;p&gt;文章标题的处理规则：如果文章内存在元数据title，则系统自动使用元数据内的title做为标题。如果文章未使用到元数据功能，用户可以通过维护文章信息按钮，修改标题。标签tags的规则也跟标题一样。&lt;/p&gt;
&lt;h2 id=&quot;附件&quot;&gt;附件&lt;/h2&gt;
&lt;p&gt;文章使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./&lt;/code&gt;做为附件的引用标识。对于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;图片&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;音频&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;视频&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;附件&lt;/code&gt;等链接的处理，系统只处理以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./&lt;/code&gt;开头的链接，并转换成附件真实的地址进行显示。用户可以通过工具栏的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;插入图片&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;插入音频&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;插入视频&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;插入附件&lt;/code&gt;等按钮上传附件。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;evernote印象笔记&quot;&gt;evernote/印象笔记&lt;/h1&gt;
&lt;p&gt;小书匠编辑器提供对evernote/印象笔记的支持，下面的使用说明默认用户已经完成了evernote/印象笔记的绑定操作，并将当前的工作平台切换到evernote/印象笔记下。&lt;/p&gt;
&lt;h2 id=&quot;新建&quot;&gt;新建&lt;/h2&gt;
&lt;p&gt;通过新建按钮后，创建的文章将自动关联到evernote/印象笔记上(&lt;strong&gt;注:这里仅仅是在文章上创建一个关联的标识，只有当用户保存后，才能在服务器上查看到新的笔记&lt;/strong&gt;)&lt;/p&gt;
&lt;h2 id=&quot;打开&quot;&gt;打开&lt;/h2&gt;
&lt;p&gt;点击笔记，系统将自动把笔记导入，并将当前文章切换为导入的笔记内容。导入的文章自动与evernote/印象笔记上的笔记关联，下次再点击该笔记时，将直接从浏览器存储上打开。用户可以通过切换存储平台&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;浏览器存储&lt;/code&gt;，来删除该缓存的文件。导入的笔记如果本地没有缓存，系统将对服务器上的笔记进行判断，如果笔记是通过小书匠编辑器进行保存，并且文章在保存后没有被操作过，则系统自动使用保存时附带的markdown附件做为文章内容，重新导入。如果笔记已经被修改，或者笔记不是通过小书匠编辑器进行保存的，系统将自动将文章转换成markdown格式。&lt;/p&gt;
&lt;h2 id=&quot;保存&quot;&gt;保存&lt;/h2&gt;
&lt;p&gt;对于新创建的文章，用户可以直接保存&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl+s&lt;/code&gt;，系统将弹出一个选择笔记本的窗口，确认后，系统将保存当前文章到evernote/印象笔记上。（在弹出窗口上选择笔记本时，如果用户选择了笔记，系统将覆盖该笔记）&lt;/p&gt;

&lt;p&gt;对于已经存在的文章，但还没有保存到evernote/印象笔记，用户可以通过另存为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl+shift+s&lt;/code&gt;将当前文章保存到evernote/印象笔记上。&lt;/p&gt;

&lt;p&gt;不管是保存，还是另存为，保存成功后，系统都将自动对当前文章与evernote/印象笔记上的笔记进行关联。下次保存时&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl+s&lt;/code&gt;系统将自动同步保存到evernote/印象笔记上。&lt;/p&gt;
&lt;h2 id=&quot;删除&quot;&gt;删除&lt;/h2&gt;
&lt;p&gt;系统不提供删除操作，用户需要自己到evernote/印象笔记端删除，如果本地缓存了笔记，可以通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;浏览器存储&lt;/code&gt;删除缓存。&lt;/p&gt;
&lt;h2 id=&quot;重命名&quot;&gt;重命名&lt;/h2&gt;
&lt;p&gt;直接修改元数据title，如果文章内未使用元数据功能，可通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;浏览器存储&lt;/code&gt;里的修改文章信息进行修改&lt;/p&gt;
&lt;h2 id=&quot;标签管理&quot;&gt;标签管理&lt;/h2&gt;
&lt;p&gt;系统自动通过每篇文章的元数据&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tags&lt;/code&gt;提取为笔记的标签。&lt;/p&gt;
&lt;h2 id=&quot;附件管理&quot;&gt;附件管理&lt;/h2&gt;
&lt;p&gt;打开时，系统自动将笔记上的附件导入到文章对应的附件管理器上。保存时，系统将根据&lt;strong&gt;文章内对附件的引用&lt;/strong&gt;，将附件保存到服务器上。这里的引用包括&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;音频&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;视频&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;附件&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;图片&lt;/code&gt;。如果文章内使用到了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;流程图&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;序列图&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;公式&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;统计图&lt;/code&gt;等，系统将会把这些内容转换成图片进行保存。由于evernote/印象笔记在部分终端不提供视频，音频的支持，查看保存的文章时，对应的音频，视频将以附件的形式存储。&lt;/p&gt;
&lt;h2 id=&quot;待办事项&quot;&gt;待办事项&lt;/h2&gt;
&lt;p&gt;目前系统仅同步了待办事项。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;githubdropbox&quot;&gt;github/dropbox&lt;/h1&gt;

&lt;h2 id=&quot;新建-1&quot;&gt;新建&lt;/h2&gt;
&lt;p&gt;参考&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;evernote/印象笔记&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新建&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;打开-1&quot;&gt;打开&lt;/h2&gt;
&lt;p&gt;参考&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;evernote/印象笔记&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;打开&lt;/code&gt;
不同的是，github/dropbox只能打开扩展名为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;html&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;markdown&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mkd&lt;/code&gt;以及无扩展名的文件。&lt;/p&gt;
&lt;h2 id=&quot;保存-1&quot;&gt;保存&lt;/h2&gt;
&lt;p&gt;参考&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;evernote/印象笔记&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;保存&lt;/code&gt;
不同的是，github/dropbox保存时，仅保存了markdown文章本身，并不会将markdown转换成html进行保存，也不会处理附件相关的内容。
对于新文章的保存，github/dropbox存储需要用户指定文件名及存储的位置。&lt;/p&gt;

&lt;h2 id=&quot;删除-1&quot;&gt;删除&lt;/h2&gt;
&lt;p&gt;系统不提供删除操作&lt;/p&gt;
&lt;h2 id=&quot;重命名-1&quot;&gt;重命名&lt;/h2&gt;
&lt;p&gt;系统不提供重命名操作，只能通过另存为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl+shift+s&lt;/code&gt;，保存成新的文件。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;本地文件系统存储&quot;&gt;本地文件系统存储&lt;/h1&gt;
&lt;p&gt;本地文件系统存储仅在离线版提供支持。&lt;/p&gt;
&lt;h2 id=&quot;新建-2&quot;&gt;新建&lt;/h2&gt;
&lt;p&gt;参考&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;evernote/印象笔记&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新建&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;打开-2&quot;&gt;打开&lt;/h2&gt;
&lt;p&gt;参考&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github/dropbox&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;打开&lt;/code&gt;
不同的是，本地文件系统存储在打开文件时，将会自动关联文章内的附件引用标识&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./&lt;/code&gt;，自动抓取同级目录下对应的附件资源。&lt;/p&gt;
&lt;h2 id=&quot;保存-2&quot;&gt;保存&lt;/h2&gt;
&lt;p&gt;参考&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github/dropbox&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;保存&lt;/code&gt;
不同的是，本地文件系统存储在保存时，不仅保存了markdown文章，还会处理附件相关的内容，将附件保存到同级目录下，请确保附件的名称不要重复，防止数据被覆盖丢失。&lt;/p&gt;

&lt;h2 id=&quot;删除-2&quot;&gt;删除&lt;/h2&gt;
&lt;p&gt;右击相应的文章可进行删除操作&lt;/p&gt;
&lt;h2 id=&quot;重命名-2&quot;&gt;重命名&lt;/h2&gt;
&lt;p&gt;右击相应的文章可进行重命名操作&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;发布&quot;&gt;发布&lt;/h1&gt;
&lt;p&gt;小书匠编辑器&lt;strong&gt;离线版&lt;/strong&gt;提供文章发布功能，用户可以将自己的文章发布到博客系统上。发布功能实现了博客的metaweblogAPI（newPost, editPost, newMediaObject）。使用该发布功能，需要博客系统提供对应的api接口，系统将转换成html的文章和图片自动提交到博客系统上。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;配置发布示例：&lt;/strong&gt;
博客链接地址：比如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://www.cnblogs.com/[用户名]/&lt;/code&gt;
用户名：用户在该博客上的用户名
密码：用户在该博客上的密码&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;测试通过的博客地址：&lt;/strong&gt;
博客园：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://www.cnblogs.com/[用户名]/&lt;/code&gt;
开源中国：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://my.oschina.net/[用户名]/blog&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;邮件发送&quot;&gt;邮件发送&lt;/h1&gt;
&lt;p&gt;小书匠编辑器提供邮件发送功能，系统将对当前文章转换成html格式后进行发送，并对图片，视频等文件以附件的形式进行发送。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;导出&quot;&gt;导出&lt;/h1&gt;
&lt;p&gt;小书匠编辑器提供多种格式的导出文件功能。==html==,==markdown==,==html(inlinestyle)==,==word==,==zip==,==pdf==。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;zip导出&lt;/strong&gt;： 该导出将导出文章的所有信息，包括markdown,html,markdown文章内引用的所有附件，公式，流程图等对应的图片文件，以及方便再次导入时需要的标识数据文件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pdf导出&lt;/strong&gt;：目前pdf导出只能在chrome版浏览器上使用。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;导入&quot;&gt;导入&lt;/h1&gt;
&lt;p&gt;小书匠编辑器提供markdown, html, zip三种导入功能，并且实现了文本文件直接拖动导入功能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;zip导入&lt;/strong&gt;：导入的zip文件必需是由小书匠编辑器导出的文件。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;其他&quot;&gt;其他&lt;/h1&gt;
&lt;p&gt;web版实现了图片直接粘贴功能，用户不仅可以拖动图片上传，还可以直接复制粘贴图片。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;storywriter/upgrade_log&quot;&gt;小书匠更新手册&lt;/a&gt;
&lt;a href=&quot;storywriter/grammar&quot;&gt;小书匠语法手册&lt;/a&gt;
&lt;a href=&quot;storywriter/tutorial&quot;&gt;小书匠使用手册&lt;/a&gt;&lt;/p&gt;</content><author><name>stepbystep</name></author><category term="小书匠" /><category term="使用手册" /><summary type="html">[toc]</summary></entry><entry><title type="html">本博客模板常见问题 Q &amp;amp; A</title><link href="https://isanthree.github.io/2021/05/13/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-Q-&-A/" rel="alternate" type="text/html" title="本博客模板常见问题 Q &amp;amp; A" /><published>2021-05-13T00:00:00+08:00</published><updated>2021-05-13T00:00:00+08:00</updated><id>https://isanthree.github.io/2021/05/13/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%20Q%20&amp;%20A</id><content type="html" xml:base="https://isanthree.github.io/2021/05/13/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-Q-&amp;-A/">&lt;p&gt;使用这个博客模板的朋友们时不时会提出一些问题，我将它们以及对应的解决方案逐渐整理归纳，汇总到这一篇帖子里。&lt;/p&gt;

&lt;h2 id=&quot;如何本地预览&quot;&gt;如何本地预览&lt;/h2&gt;

&lt;p&gt;参考 GitHub 的官方说明：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/setting-up-your-pages-site-locally-with-jekyll/&quot;&gt;Setting up your Pages site locally with Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;本地预览报错-undefined-method-map-for-false&quot;&gt;本地预览报错 undefined method map for false&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GitHub Metadata: Failed to open TCP connection to api.github.com:443 (Connection refused - connect(2) for &quot;api.github.com&quot; port 443)
Liquid Exception: undefined method `map' for false:FalseClass Did you mean? tap in /_layouts/page.html
jekyll 3.8.5 | Error:  undefined method `map' for false:FalseClass
Did you mean?  tap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;undefined method `map` for false:FalseClass&lt;/code&gt; 这条报错之前总是伴随着 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Failed to open TCP connection to api.github.com:443&lt;/code&gt; 一起出现，是在获取 GitHub Metadata 出错后，导致这一句报错：&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;repos&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;public_repositories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stargazers_count&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;解决方法：&lt;/p&gt;

&lt;p&gt;模板里主要是 _includes/sidebar-popular-repo.html 和 _pages/open-source.md 两个文件里用到了 Metadata，将以上这一句前的判断条件做一下修改后问题解决，将&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;public_repositories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;改为&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;public_repositories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;模板最新代码已经做了修改。&lt;/p&gt;

&lt;h2 id=&quot;是否支持画流程图时序图mermaid-和-mathjax&quot;&gt;是否支持画流程图、时序图、mermaid 和 MathJax&lt;/h2&gt;

&lt;p&gt;支持。因为相关的引入文件比较大可能影响加载速度，没有默认对所有文件开启，需要在要想开启的文件的 Front Matter 里加上声明：&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mermaid&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mathjax&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以上四个开关分别对应 flowchart.js（流程图）、sequence-diagram.js（时序图）、mermaid 和 MathJax 的支持，按需开启即可，然后就可以在正文里正常画图了，展示效果可以参见 &lt;a href=&quot;https://isanthree.github.io/wiki/markdown/&quot;&gt;https://isanthree.github.io/wiki/markdown/&lt;/a&gt;，对应写法参考源文件 &lt;a href=&quot;https://github.com/isanthree/isanthree.github.io/blob/master/_wiki/markdown.md&quot;&gt;https://github.com/isanthree/isanthree.github.io/blob/master/_wiki/markdown.md&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;如何修改代码高亮风格&quot;&gt;如何修改代码高亮风格&lt;/h2&gt;

&lt;p&gt;可以通过 _config.yml 文件里的配置项 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;highlight_theme&lt;/code&gt; 来指定代码高亮风格，支持的风格名称列表参考我维护的另一个项目：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/isanthree/rouge-themes&quot;&gt;https://github.com/isanthree/rouge-themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在项目主页可以看到每种风格的预览效果。&lt;/p&gt;

&lt;h2 id=&quot;gitalk-授权登录后提示-403-错误&quot;&gt;Gitalk 授权登录后提示 403 错误&lt;/h2&gt;

&lt;p&gt;具体看到的错误信息为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Error: Requrest failed with status code 403&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;详细的讨论可以参考 &lt;a href=&quot;https://github.com/gitalk/gitalk/issues/429&quot;&gt;https://github.com/gitalk/gitalk/issues/429&lt;/a&gt;，这个 Issue 里也提到了问题原因和解决方案：更新 Gitalk 到 1.7.2 版本，或者自行搭建 CORS proxy service 并增加配置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy: '&amp;lt;你的 proxy 地址&amp;gt;'&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果是使用本模板最新代码，那不用做什么，会自动引用最新版本。如果一再刷新后还是不行的话，那需要刷新一下你本地的缓存，方法是依次访问以下 2 个链接：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://purge.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&quot;&gt;https://purge.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js?v=1.7.2&quot;&gt;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js?v=1.7.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>stepbystep</name></author><category term="GitHub" /><summary type="html">使用这个博客模板的朋友们时不时会提出一些问题，我将它们以及对应的解决方案逐渐整理归纳，汇总到这一篇帖子里。</summary></entry><entry><title type="html">搭建大型源码阅读环境——使用 OpenGrok</title><link href="https://isanthree.github.io/2020/12/14/%E6%90%AD%E5%BB%BA%E5%A4%A7%E5%9E%8B%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E7%8E%AF%E5%A2%83-%E4%BD%BF%E7%94%A8-OpenGrok/" rel="alternate" type="text/html" title="搭建大型源码阅读环境——使用 OpenGrok" /><published>2020-12-14T00:00:00+08:00</published><updated>2020-12-14T00:00:00+08:00</updated><id>https://isanthree.github.io/2020/12/14/%E6%90%AD%E5%BB%BA%E5%A4%A7%E5%9E%8B%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E7%8E%AF%E5%A2%83%E2%80%94%E2%80%94%E4%BD%BF%E7%94%A8%20OpenGrok</id><content type="html" xml:base="https://isanthree.github.io/2020/12/14/%E6%90%AD%E5%BB%BA%E5%A4%A7%E5%9E%8B%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E7%8E%AF%E5%A2%83-%E4%BD%BF%E7%94%A8-OpenGrok/">&lt;p&gt;转载&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;RTFSC 是程序员打怪升级路上避不开的功课，那营造一个舒适的环境来提升上课的体验就很有必要了。&lt;/p&gt;

&lt;p&gt;比如阅读 AOSP 这种大型源码，用什么姿势来阅读才能丝般顺滑，让 F**king Source Code 也变得不那么可恶呢？&lt;/p&gt;

&lt;h2 id=&quot;工具的选择&quot;&gt;工具的选择&lt;/h2&gt;

&lt;p&gt;阅读源码的工具我尝试过以下几类：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;IDE&lt;/p&gt;

    &lt;p&gt;在看特定类型项目时这是我的首选。比如它原本就是一个 Visual Studio 工程，那当然用 Visual Studio 来打开阅读，看 Android App 或者 Library 源码当然用 Android Studio 体验更好。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编辑器配合插件&lt;/p&gt;

    &lt;p&gt;比如 Vim + Ctags + Cscope，再配合文件模糊查找插件 LeaderF 和神器 YouCompleteMe，在源码规模不大时很方便，打开也轻快，阅读一些小项目时我还是乐意使用它们。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;专门的源码阅读工具&lt;/p&gt;

    &lt;p&gt;在针对特大型源码时，比如 AOSP 和 Chromium，使用上述两种方案可能会感觉乏力，这时候就需要祭出专门的源码阅读工具了。&lt;/p&gt;

    &lt;p&gt;一类是商业软件，比如 Windows 下有著名的 Source Insight，跨平台的有 Understand，功能都很强大，都是不错的选择。当然它们都价格不菲。&lt;/p&gt;

    &lt;p&gt;而我这里要讲的主角 OpenGrok 属于另一类，免费，开源，运行流畅，功能也毫不逊色。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果你还在寻觅适合你自己的解决方案，大可以花一点时间将以上几种都尝试一遍，哪个称手用哪个，也可以像我一样，针对不同的项目使用不同的工具。想直观了解 OpenGrok 的同学可以直接先看看一些使用 OpenGrok 的在线源码查看网站，看看它能否满足你的需求，其中的一些列在 &lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/wiki/OpenGrok-installations&quot;&gt;OpenGrok installations&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;opengrok-特性&quot;&gt;OpenGrok 特性&lt;/h2&gt;

&lt;p&gt;译自官方 &lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/wiki/Features&quot;&gt;Wiki&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;OpenGrok 提供如下特性：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;快速搜索代码的引擎&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;搜索全文、定义、符号、文件路径和修改历史&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;搜索任意指定子目录（分层搜索）&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;增量更新索引文件&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;支持类似 Google 的查询语法，比如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;path:Makefile defs:target&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;搜索日期范围内修改的文件&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;支持使用通配符搜索，如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt; 表示多个字符，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt; 表示单个字符&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;在搜索结果中展示匹配行&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一个 Web 只读版的版本历史查看界面&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;文件的修改日志&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;文件在两个版本间的 diff&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;文件夹的历史记录&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;带语法高亮的交叉引用显示，可以使用 CSS 自定义样式&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;可以开发插件支持新的语言和版本控制系统&lt;/p&gt;

    &lt;p&gt;已经支持的语言： &lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/wiki/Supported-Languages-and-Formats&quot;&gt;Supported Languages and Formats&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;已经支持的版本控制系统：&lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/wiki/Supported-Revision-Control-Systems&quot;&gt;Supported Revision Control Systems&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;配置-opengrok&quot;&gt;配置 OpenGrok&lt;/h2&gt;

&lt;h3 id=&quot;截屏&quot;&gt;截屏&lt;/h3&gt;

&lt;p&gt;按惯例先上图吧，万一你一眼就发现不是你的菜呢（截图来自&lt;a href=&quot;https://opengrok.github.io/OpenGrok/&quot;&gt;官网&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;搜索功能和源码树：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tools/opengrok-scr1.png&quot; alt=&quot;OpenGrok Search and Browse&quot; /&gt;&lt;/p&gt;

&lt;p&gt;代码导航和版本历史记录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tools/opengrok-scr2.png&quot; alt=&quot;OpenGrok Navitation and History&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;安装和配置&quot;&gt;安装和配置&lt;/h3&gt;

&lt;p&gt;如下以 Windows 下为例，Mac OS X 与 Linux 下与此类似，很多步骤能使用 brew 或者 apt-get 会更方便。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装 &lt;a href=&quot;http://www.oracle.com/technetwork/java/&quot;&gt;JDK&lt;/a&gt;，并配置 JAVA_HOME 或者 JRE_HOME 环境变量为安装目录。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载 &lt;a href=&quot;http://tomcat.apache.org/&quot;&gt;Tomcat&lt;/a&gt;，解压到一个目录，如 D:\Programs\apache-tomcat-8.5.8，并将此目录添加为 CATALINA_HOME 环境变量。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/posts/tools/catalina-home.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载 &lt;a href=&quot;https://github.com/universal-ctags/ctags&quot;&gt;Universal Ctags&lt;/a&gt; for Windows，将 ctags.exe 文件所在目录添加到 PATH 环境变量。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载 &lt;a href=&quot;https://github.com/OpenGrok/OpenGrok/releases&quot;&gt;OpenGrok&lt;/a&gt; 的最新包，比如 opengrok-0.13-rc4.zip，解压到一个目录，如 D:\Programs\opengrok-0.13-rc4。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置 data root。&lt;/p&gt;

    &lt;p&gt;data root 用于放置生成的索引文件和配置信息，比如我在 OpenGrok 目录下创建了一个 data 目录用作 data root，即 D:\Programs\opengrok-0.13-rc4\data。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将 OpenGrok 的 lib 目录里的 source.war 解压到 D:\Programs\apache-tomcat-8.5.8\webapps\source，配置 WEB-INF\web.xml 文件的 CONFIGURATION 为上一步生成的 data 目录下的 configureation.xml，比如我的配置：&lt;/p&gt;

    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;display-name&amp;gt;&lt;/span&gt;OpenGrok&lt;span class=&quot;nt&quot;&gt;&amp;lt;/display-name&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;A wicked fast source browser&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;context-param&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Full path to the configuration file where OpenGrok can read its configuration&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;CONFIGURATION&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;D:/Programs/opengrok-0.13-rc4/data/configuration.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/context-param&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;em&gt;注：这里只是配置一个文件路径，具体的 configuration.xml 会在第 8 步时自动生成。&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置 source root。&lt;/p&gt;

    &lt;p&gt;可以让 OpenGrok 认为 source root 下的每个子文件夹是一个项目，所以我们利用这个特性来配置和阅读多个项目源码就好了。&lt;/p&gt;

    &lt;p&gt;我的做法是在 OpenGrok 下创建了一个子目录 D:\Programs\opengrok-0.13-rc4\projects，然后将需要阅读的源码使用符号链接的方式链接到这个目录里：&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /d D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;rojects
mklink /J android D:&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ources&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;ndroid_5.1
mklink /J openjdk7 D:&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ources&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;penjdk7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;这样就有一个叫 android 的工程，它实际对应 D:\sources\android_5.1 下的源码，一个叫 openjdk7 的工程，它实际对应 D:\sources\openjdk7 下的源码。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;建立索引。&lt;/p&gt;

    &lt;p&gt;使用 opengrok.jar 调用 ctags 来为源码建立索引。命令行：&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; /path/to/opengrok.jar &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /path/to/source/root &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; /path/to/data/root &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt; /path/to/configuration.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-P&lt;/code&gt; 表示为 source root 目录下的每个一级子目录生成一个工程。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-S&lt;/code&gt; 表示搜索并添加 “external” source repositories。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-v&lt;/code&gt; 表示打印操作的进度信息。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-s&lt;/code&gt; 表示指定 source root。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt; 表示指定 data root。&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-W&lt;/code&gt; 表示指定将配置写到该文件。&lt;/p&gt;

    &lt;p&gt;还有更多配置选项可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java -jar /path/to/opengrok.jar&lt;/code&gt; 查看。&lt;/p&gt;

    &lt;p&gt;比如我使用的完整命令行：&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\l&lt;/span&gt;ib&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok.jar &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;rojects &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;ata &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt; D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\o&lt;/span&gt;pengrok-0.13-rc4&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;ata&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;onfiguration.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;每次需要建立或更新索引的时候敲这么长一个命令当然很不爽，使用 doskey 或者 Cmder 里的 alias 命令将其 alias 为 opengrok-index 命令会省力不少，再不济把这命令存成个 bat 文件也行啊。&lt;/p&gt;

    &lt;p&gt;为大型源码建立索引可能需要漫长的时间，这时候可以去干点别的事了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启动 Tomcat，愉快地 RTFSC。&lt;/p&gt;

    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;D:&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;rograms&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;pache-tomcat-8.5.8&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;atalina.bat start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;用你最爱的浏览器打开 &lt;a href=&quot;http://localhost:8080/source/&quot;&gt;http://localhost:8080/source/&lt;/a&gt;，然后就能愉快地跟 OpenGrok 玩耍了。&lt;/p&gt;

    &lt;p&gt;当新添加了项目，或者现有项目有源码更新时，再次执行上一步的命令，就能增量更新索引了。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;配置多项目&quot;&gt;配置多项目&lt;/h3&gt;

&lt;p&gt;我曾经为如何在 OpenGrok 里配置多项目苦恼了好久——一开始我是把 Android 源码的根目录当作 source root 的，可想而知 OpenGrok 把 Android 分成了好多个子项目，而这时我也没法再添加新的工程了。&lt;/p&gt;

&lt;p&gt;后来才发现建一个专用的 source root，然后把各种项目源码根目录软链接过来，让 OpenGrok 为 source root 下的每个 symbol 一级子目录建立一个项目才是正确的使用方法。&lt;/p&gt;

&lt;p&gt;Windows 下建立软链接的方法是使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mklink /J android D:\sources\android_5.1&lt;/code&gt;，Mac OS X 和 Linux 下可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ln -s /path/to/source project_name&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;折腾狂魔&quot;&gt;折腾狂魔&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;在 Vim 里使用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;没错，还有人做了支持在 Vim 里使用 OpenGrok 的插件，如果你是 Vim 控+折腾狂魔，可以一试，这里仅给出插件地址：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/asenac/vim-opengrok&quot;&gt;asenac/vim-opengrok&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jdevera/vim-opengrok-search&quot;&gt;jdevera/vim-opengrok-search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;反正像我这种智商是折腾不动了，就安心在浏览器里用了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在源码里做笔记&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;配合 Chrome 插件 &lt;a href=&quot;https://chrome.google.com/webstore/detail/diigo-web-collector-captu/pnhplgjpclknigjpccbcnmicgcieojbh&quot;&gt;Diigo&lt;/a&gt;，还能给源码加标签，写注释等等。&lt;/p&gt;

&lt;p&gt;参考：&lt;a href=&quot;https://www.zhihu.com/question/33505693/answer/132224974&quot;&gt;https://www.zhihu.com/question/33505693/answer/132224974&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;常见问题&quot;&gt;常见问题&lt;/h2&gt;

&lt;h3 id=&quot;打开网页后报错&quot;&gt;打开网页后报错&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;There was an error!
CONFIGURATION parameter has not been configured in web.xml! Please configure your webapp.
Unable to determine source root path. Missing configuration?
java.io.FileNotFoundException: Unable to determine source root path. Missing configuration?
	at org.opensolaris.opengrok.web.PageConfig.checkSourceRootExistence(PageConfig.java:1562)
	at org.apache.jsp.index_jsp._jspService(index_jsp.java:222)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:443)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.opensolaris.opengrok.web.StatisticsFilter.doFilter(StatisticsFilter.java:55)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.opensolaris.opengrok.web.AuthorizationFilter.doFilter(AuthorizationFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这一般是由于更新或切换了 OpenGrok 版本，但却没有将 tomcat 的 webapps 目录下的 source 文件夹替换为对应版本。&lt;/p&gt;

&lt;h2 id=&quot;后话&quot;&gt;后话&lt;/h2&gt;

&lt;p&gt;古人教会了我们工欲善其事，必先利其器的智慧，但我们也不能沉迷和徘徊于各种利器之间，选择一样自己感觉最称手的工具，把它用熟练，少再在这上面花时间折腾，毕竟把有限的生命投入到无限的 RTFSC 才是正道不是么。&lt;/p&gt;</content><author><name>stepbystep</name></author><category term="Tools" /><summary type="html">转载</summary></entry><entry><title type="html">图解 SQL 里的各种 JOIN</title><link href="https://isanthree.github.io/2020/12/11/%E5%9B%BE%E8%A7%A3SQL%E9%87%8C%E7%9A%84%E5%90%84%E7%A7%8DJOIN/" rel="alternate" type="text/html" title="图解 SQL 里的各种 JOIN" /><published>2020-12-11T00:00:00+08:00</published><updated>2020-12-11T00:00:00+08:00</updated><id>https://isanthree.github.io/2020/12/11/%E5%9B%BE%E8%A7%A3SQL%E9%87%8C%E7%9A%84%E5%90%84%E7%A7%8DJOIN</id><content type="html" xml:base="https://isanthree.github.io/2020/12/11/%E5%9B%BE%E8%A7%A3SQL%E9%87%8C%E7%9A%84%E5%90%84%E7%A7%8DJOIN/">&lt;p&gt;从业以来主要在做客户端，用到的数据库都是表结构比较简单的 SQLite，以我那还给老师一大半的 SQL 水平倒也能对付。现在偶尔需要到后台的 SQL Server 里追查一些数据问题，就显得有点捉襟见肘了，特别是各种 JOIN，有时候傻傻分不清楚，于是索性弄明白并做个记录。&lt;/p&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;在各种问答社区里谈及 SQL 里的各种 JOIN 之间的区别时，最被广为引用的是 CodeProject 上 &lt;a href=&quot;https://www.codeproject.com/script/Membership/View.aspx?mid=5909363&quot;&gt;C.L. Moffatt&lt;/a&gt; 的文章 &lt;a href=&quot;https://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins&quot;&gt;Visual Representation of SQL Joins&lt;/a&gt;，他确实讲得简单明了，使用文氏图来帮助理解，效果明显。本文将沿用他的讲解方式，稍有演绎，可以视为该文较为粗糙的中译版。&lt;/p&gt;

&lt;h2 id=&quot;约定&quot;&gt;约定&lt;/h2&gt;

&lt;p&gt;下文将使用两个数据库表 Table_A 和 Table_B 来进行示例讲解，其结构与数据分别如下：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; SELECT * FROM Table_A ORDER BY PK ASC;
+----+---------+
| PK | Value   |
+----+---------+
|  1 | both ab |
|  2 | only a  |
+----+---------+
2 rows in set (0.00 sec)

mysql&amp;gt; SELECT * from Table_B ORDER BY PK ASC;
+----+---------+
| PK | Value   |
+----+---------+
|  1 | both ab |
|  3 | only b  |
+----+---------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中 PK 为 1 的记录在 Table_A 和 Table_B 中都有，2 为 Table_A 特有，3 为 Table_B 特有。&lt;/p&gt;

&lt;h2 id=&quot;常用的-join&quot;&gt;常用的 JOIN&lt;/h2&gt;

&lt;h3 id=&quot;inner-join&quot;&gt;INNER JOIN&lt;/h3&gt;

&lt;p&gt;INNER JOIN 一般被译作内连接。内连接查询能将左表（表 A）和右表（表 B）中能关联起来的数据连接后返回。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192753.png&quot; alt=&quot;INNER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    1 |    1 | both ab | both ab |
+------+------+---------+---------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注：其中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Table_A&lt;/code&gt; 的别名，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt; 为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Table_B&lt;/code&gt; 的别名，下同。&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;left-join&quot;&gt;LEFT JOIN&lt;/h3&gt;

&lt;p&gt;LEFT JOIN 一般被译作左连接，也写作 LEFT OUTER JOIN。左连接查询会返回左表（表 A）中所有记录，不管右表（表 B）中有没有关联的数据。在右表中找到的关联数据列也会被一起返回。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192754.png&quot; alt=&quot;LEFT JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    1 |    1 | both ab | both ba |
|    2 | NULL | only a  | NULL    |
+------+------+---------+---------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;right-join&quot;&gt;RIGHT JOIN&lt;/h3&gt;

&lt;p&gt;RIGHT JOIN 一般被译作右连接，也写作 RIGHT OUTER JOIN。右连接查询会返回右表（表 B）中所有记录，不管左表（表 A）中有没有关联的数据。在左表中找到的关联数据列也会被一起返回。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192755.png&quot; alt=&quot;RIGHT JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    1 |    1 | both ab | both ba |
| NULL |    3 | NULL    | only b  |
+------+------+---------+---------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;full-outer-join&quot;&gt;FULL OUTER JOIN&lt;/h3&gt;

&lt;p&gt;FULL OUTER JOIN 一般被译作外连接、全连接，实际查询语句中可以写作 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FULL JOIN&lt;/code&gt;。外连接查询能返回左右表里的所有记录，其中左右表里能关联起来的记录被连接后返回。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192756.png&quot; alt=&quot;FULL OUTER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL OUTER JOIN Table_B B
ON A.PK = B.PK' at line 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注：我当前示例使用的 MySQL 不支持 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FULL OUTER JOIN&lt;/code&gt;。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;应当返回的结果（使用 UNION 模拟）：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; SELECT * 
    -&amp;gt; FROM Table_A
    -&amp;gt; LEFT JOIN Table_B 
    -&amp;gt; ON Table_A.PK = Table_B.PK
    -&amp;gt; UNION ALL
    -&amp;gt; SELECT *
    -&amp;gt; FROM Table_A
    -&amp;gt; RIGHT JOIN Table_B 
    -&amp;gt; ON Table_A.PK = Table_B.PK
    -&amp;gt; WHERE Table_A.PK IS NULL;
+------+---------+------+---------+
| PK   | Value   | PK   | Value   |
+------+---------+------+---------+
|    1 | both ab |    1 | both ba |
|    2 | only a  | NULL | NULL    |
| NULL | NULL    |    3 | only b  |
+------+---------+------+---------+
3 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;

&lt;p&gt;以上四种，就是 SQL 里常见 JOIN 的种类和概念了，看一下它们的合影：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192757.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有没有感觉少了些什么，学数学集合时完全不止这几种情况？确实如此，继续看。&lt;/p&gt;

&lt;h2 id=&quot;延伸用法&quot;&gt;延伸用法&lt;/h2&gt;

&lt;h3 id=&quot;left-join-excluding-inner-join&quot;&gt;LEFT JOIN EXCLUDING INNER JOIN&lt;/h3&gt;

&lt;p&gt;返回左表有但右表没有关联数据的记录集。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192758.png&quot; alt=&quot;LEFT JOIN EXCLUDING INNER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    2 | NULL | only a  | NULL    |
+------+------+---------+---------+
1 row in set (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;right-join-excluding-inner-join&quot;&gt;RIGHT JOIN EXCLUDING INNER JOIN&lt;/h3&gt;

&lt;p&gt;返回右表有但左表没有关联数据的记录集。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192759.png&quot; alt=&quot;RIGHT JOIN EXCLUDING INNER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
| NULL |    3 | NULL    | only b  |
+------+------+---------+---------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;full-outer-join-excluding-inner-join&quot;&gt;FULL OUTER JOIN EXCLUDING INNER JOIN&lt;/h3&gt;

&lt;p&gt;返回左表和右表里没有相互关联的记录集。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文氏图：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192800.png&quot; alt=&quot;FULL OUTER JOIN EXCLUDING INNER JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;因为使用到了 FULL OUTER JOIN，MySQL 在执行该查询时再次报错。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL OUTER JOIN Table_B B
ON A.PK = B.PK
WHERE A.PK IS NULL
OR B.PK IS NULL' at line 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;应当返回的结果（用 UNION 模拟）：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; SELECT * 
    -&amp;gt; FROM Table_A
    -&amp;gt; LEFT JOIN Table_B
    -&amp;gt; ON Table_A.PK = Table_B.PK
    -&amp;gt; WHERE Table_B.PK IS NULL
    -&amp;gt; UNION ALL
    -&amp;gt; SELECT *
    -&amp;gt; FROM Table_A
    -&amp;gt; RIGHT JOIN Table_B
    -&amp;gt; ON Table_A.PK = Table_B.PK
    -&amp;gt; WHERE Table_A.PK IS NULL;
+------+--------+------+--------+
| PK   | Value  | PK   | Value  |
+------+--------+------+--------+
|    2 | only a | NULL | NULL   |
| NULL | NULL   |    3 | only b |
+------+--------+------+--------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;以上七种用法基本上可以覆盖各种 JOIN 查询了。七种用法的全家福：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192801.png&quot; alt=&quot;SQL JOINS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;看着它们，我仿佛回到了当年学数学，求交集并集的时代……&lt;/p&gt;

&lt;p&gt;顺带张贴一下 &lt;a href=&quot;https://www.codeproject.com/script/Membership/View.aspx?mid=5909363&quot;&gt;C.L. Moffatt&lt;/a&gt; 带 SQL 语句的图片，配合学习，风味更佳：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192802.jpg&quot; alt=&quot;SQL JOINS&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;更新更多的-join&quot;&gt;更新：更多的 JOIN&lt;/h2&gt;

&lt;p&gt;除以上几种外，还有更多的 JOIN 用法，比如 CROSS JOIN（迪卡尔集）、SELF JOIN，可以参考 &lt;a href=&quot;https://www.w3resource.com/slides/sql-joins-slide-presentation.php&quot;&gt;SQL JOINS Slide Presentation&lt;/a&gt; 学习。&lt;/p&gt;

&lt;h3 id=&quot;cross-join&quot;&gt;CROSS JOIN&lt;/h3&gt;

&lt;p&gt;返回左表与右表之间符合条件的记录的迪卡尔集。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图示：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/isanthree/blog-gallery/20210515192803.png&quot; alt=&quot;CORSS JOIN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_PK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_Value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+------+------+---------+---------+
| A_PK | B_PK | A_Value | B_Value |
+------+------+---------+---------+
|    1 |    1 | both ab | both ba |
|    2 |    1 | only a  | both ba |
|    1 |    3 | both ab | only b  |
|    2 |    3 | only a  | only b  |
+------+------+---------+---------+
4 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面讲过的几种 JOIN 查询的结果都可以用 CROSS JOIN 加条件模拟出来，比如 INNER JOIN 对应 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CROSS JOIN ... WHERE A.PK = B.PK&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;self-join&quot;&gt;SELF JOIN&lt;/h3&gt;

&lt;p&gt;返回表与自己连接后符合条件的记录，一般用在表里有一个字段是用主键作为外键的情况。&lt;/p&gt;

&lt;p&gt;比如 Table_C 的结构与数据如下：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+--------+----------+-------------+
| EMP_ID | EMP_NAME | EMP_SUPV_ID |
+--------+----------+-------------+
|   1001 | Ma       |        NULL |
|   1002 | Zhuang   |        1001 |
+--------+----------+-------------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;EMP_ID 字段表示员工 ID，EMP_NAME 字段表示员工姓名，EMP_SUPV_ID 表示主管 ID。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;示例查询：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;现在我们想查询所有有主管的员工及其对应的主管 ID 和姓名，就可以用 SELF JOIN 来实现。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_SUPV_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_SUPV_NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Table_C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_SUPV_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询结果：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+--------+----------+-------------+---------------+
| EMP_ID | EMP_NAME | EMP_SUPV_ID | EMP_SUPV_NAME |
+--------+----------+-------------+---------------+
|   1002 | Zhuang   |        1001 | Ma            |
+--------+----------+-------------+---------------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;补充说明&quot;&gt;补充说明&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;文中的图使用 Keynote 绘制；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;个人的体会是 SQL 里的 JOIN 查询与数学里的求交集、并集等很像；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SQLite 不支持 RIGHT JOIN 和 FULL OUTER JOIN，可以使用 LEFT JOIN 和 UNION 来达到相同的效果；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MySQL 不支持 FULL OUTER JOIN，可以使用 LEFT JOIN 和 UNION 来达到相同的效果；&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;假如你对我的文章感兴趣，可以关注我的微信公众号 isprogrammer 随时阅读更多内容。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins&quot;&gt;Visual Representation of SQL Joins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4796872/how-to-do-a-full-outer-join-in-mysql&quot;&gt;How to do a FULL OUTER JOIN in MySQL?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3resource.com/slides/sql-joins-slide-presentation.php&quot;&gt;SQL JOINS Slide Presentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3resource.com/sql/joins/perform-a-self-join.php&quot;&gt;SQL Self Join&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>stepbystep</name></author><category term="Database" /><summary type="html">从业以来主要在做客户端，用到的数据库都是表结构比较简单的 SQLite，以我那还给老师一大半的 SQL 水平倒也能对付。现在偶尔需要到后台的 SQL Server 里追查一些数据问题，就显得有点捉襟见肘了，特别是各种 JOIN，有时候傻傻分不清楚，于是索性弄明白并做个记录。</summary></entry><entry><title type="html">操作系统和数据库基础</title><link href="https://isanthree.github.io/2020/11/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/" rel="alternate" type="text/html" title="操作系统和数据库基础" /><published>2020-11-06T00:00:00+08:00</published><updated>2020-11-06T00:00:00+08:00</updated><id>https://isanthree.github.io/2020/11/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80</id><content type="html" xml:base="https://isanthree.github.io/2020/11/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;进程与线程的差别&lt;/p&gt;

    &lt;p&gt;进程是程序的一次执行。线程可以理解为进程中执行的一段程序片段。在一个多任务环境下中下面的概念可以帮助我们理解两者的区别。&lt;/p&gt;

    &lt;p&gt;进程间是独立的，这表现在内存空间，上下文环境上；线程运行在进程空间里。一般来讲（不使用特殊技术），进程无法突破进程边界存取其它进程内的存储空间；而线程由于处于线程空间内，所以同一进程所产生的线程共享内一内存空间。同一进程中的两段代码不能够同时执行，除非引入线程。&lt;/p&gt;

    &lt;p&gt;线程是属于进程的，当进程退出时该进程所产生的线程都会被强制退出并清除。线程占用的资源要少于进程所占用的资料。&lt;/p&gt;

    &lt;p&gt;进程和线程都可以有优先级。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进程间通信的方式&lt;/p&gt;

    &lt;p&gt;现在最常用进程间通信的方式有信号，信号量，消息队列，共享内存。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;线程同步的方法&lt;/p&gt;

    &lt;p&gt;临界区，互斥量，信号量，事件。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DLL 文件的作用&lt;/p&gt;

    &lt;p&gt;(1)拓展应用程序&lt;/p&gt;

    &lt;p&gt;(2)便于程序员合作&lt;/p&gt;

    &lt;p&gt;(3)节省内存&lt;/p&gt;

    &lt;p&gt;(4)共享程序资源&lt;/p&gt;

    &lt;p&gt;(5)解决应用程序本地化问题&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;什么是存储过程?&lt;/p&gt;

    &lt;p&gt;存储过程是一组为了完成特定功能的 SQL 语句集。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;什么是触发器?&lt;/p&gt;

    &lt;p&gt;触发器是一个特殊的存储过程，它的执行不是由程序调动，也不由手工启动，而是由事件来触发。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;什么是事务?&lt;/p&gt;

    &lt;p&gt;事务是访问并可能更新数据库中各种数据项的一个程序执行单元。&lt;/p&gt;

    &lt;p&gt;(在关系数据库中，一个事务可以是一条SQL语句，一组 SQL 语句或整个程序)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;事务的几个特性&lt;/p&gt;

    &lt;p&gt;(1)一致性：将事务中所做的操作捆绑成一个原子单元，即对于事务所进行的数据修改等操作，要么全部执行，要么全部不执行。&lt;/p&gt;

    &lt;p&gt;(2)原子性：事务在完成时，必须使所有的数据都保持一致状态，而且在相关数据中，所有规则都必须应用于事务的修改，以保持所有数据的完整性。事务结束时，所有的内部数据结构都应该是正确的。&lt;/p&gt;

    &lt;p&gt;(3)隔离性：由并发事务所做的修改必须与任何其他事务所做的修改相隔离。事务查看数据时数据所处的状态，要么是被另一并发事务修改之前的状态，要么是被另一并发事务修改之后的状态。即事务不会查看由另一个并发事务正在修改的数据。这种隔离方式也叫可串行性。&lt;/p&gt;

    &lt;p&gt;(4)持久性：事务完成之后，它对系统的影响是永久的，即使出现系统故障也是如此。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;什么是 ADO?它与 ODBC 比起来哪种方式快?&lt;/p&gt;

    &lt;p&gt;ADO(ActiveX Data Objects)是一个用于存取数据源的 COM 组件。它提供了编程语言和统一数据访问方式的 OLE DB 的一个中间层。允许开发人员编写访问数据的代码而不用关心数据库是如何实现的，而只用关心到数据库的连接。&lt;/p&gt;

    &lt;p&gt;ADO 更快。(这个网上争议很多)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>stepbystep</name></author><category term="Basis" /><summary type="html">进程与线程的差别</summary></entry></feed>